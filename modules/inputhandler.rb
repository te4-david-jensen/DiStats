class Input
    
    # Public: turns and array or hash-keys into a string for use in an sql statement
    # 
    # list: the array or hash to be turned into a string
    # 
    # Examples
    # 
    # Input.list_to_string(["hello", "I", "am", "an", "example"])
    #   #=> "'hello', 'I', 'am', 'an', 'example'"
    def self.list_to_string(list)
        
        output = ""
        
        if list.is_a? Array
            
            # handle cases where an array containing an array has been input
            if list[0].is_a? Array
            
                list = list[0]
                
            end

            list.each_with_index do |element, i|
                
                    output += "'#{element}'"
                
                if list.length > i + 1
                    
                    output += ", "
                    
                end
                
            end
            
            return output
            
        elsif list.is_a? Hash
            
            keys = list.keys
            
            array = []
            
            keys.each do |key|
                
                array << list[key]
                
            end
            
            list_to_string(array)
            
        else
            
            puts '#---------------------#'
            puts 'error in list_to_string'
            puts "this shouldnt happen"
            puts '#---------------------#'
            
        end
        
    end
    
    # Public: turns an array containing values and array of keys into a hash
    # 
    # array: the array containing values
    # array: the array containing keys
    # 
    # Examples
    # 
    # Input.array_to_hash(["string1", "string2"], ["key2", "key1"])
    #   #=> {"key2" => "string1", "key1" => "string2"}
    def self.array_to_hash(array, keys)
        
        # special case, 'id' is autogenerated by database
        if keys[0] == "id"
            
            keys.shift
            
        end
        
        hash ={}
        
        keys.each_with_index do |column, i|
            
            hash[column] = array[i]
            
        end
        
        # puts '#----------#'
        # puts ''
        # p hash
        # puts ''
        # puts '#----------#'
        
        return hash
        
    end
    
    # Public: turns a string into a hash based on separators
    # 
    # string: the string to be converted into a hash
    # element_separator: an optional input that denotes what character is used to separate elements
    # key_separator: an optional input that denotes what character is used to separate a key from it's corresponding value
    # 
    # Examples
    # 
    # Input.string_to_hash("name:Tag1,id:1")
    #   #=> {:name => "Tag1", :id => "1"}
    def self.string_to_hash(string, element_separator=',', key_separator=':')
        
        string = string.gsub("'", "")
        
        elements = string.split(element_separator)
        hash = {}
        
        elements.each do |value|
            
            key_values = value.split(key_separator)
            hash[key_values[0].to_sym] = key_values[1]
            
        end
        
        return hash
        
    end
    
end